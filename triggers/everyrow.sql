DROP TABLE has_created;

CREATE TABLE has_created(id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY, amount INT NOT NULL, created TIMESTAMP NOT NULL, updated TIMESTAMP);

CREATE OR REPLACE FUNCTION created() RETURNS TRIGGER LANGUAGE plpgsql AS $$
BEGIN
    NEW.created = now();
    RAISE NOTICE 'CREATING id=%, data=%', NEW.id, NEW;
    RETURN NEW;
END;
$$;

CREATE TRIGGER trig_set_created BEFORE INSERT ON has_created FOR EACH ROW EXECUTE PROCEDURE created();

CREATE OR REPLACE FUNCTION updated() RETURNS TRIGGER LANGUAGE plpgsql AS $$
BEGIN
    NEW.updated = now();
    RAISE NOTICE 'EDITING id=%, data=%', NEW.id, NEW;
    RETURN NEW;
END;
$$;

CREATE TRIGGER trig_set_updated BEFORE UPDATE ON has_created FOR EACH ROW EXECUTE PROCEDURE updated();

INSERT INTO has_created (id, amount) VALUES (1, 10);

SELECT * FROM has_created;

UPDATE has_created SET amount = 20 WHERE id = 1;

SELECT * FROM has_created;